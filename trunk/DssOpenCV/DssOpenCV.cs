//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     DSS Runtime Version: 2.0.730.3
//     CLR Runtime Version: 2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.Ccr.Core;
using Microsoft.Dss.Core;
using Microsoft.Dss.Core.Attributes;
using Microsoft.Dss.ServiceModel.Dssp;
using Microsoft.Dss.ServiceModel.DsspServiceBase;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml;
using W3C.Soap;
using dssopencv = Robotics.DssOpenCV;
using Microsoft.Ccr.Adapters.WinForms;

//using CLROpenCV;

namespace Robotics.DssOpenCV
{
    
    
    /// <summary>
    /// Implementation class for DssOpenCV
    /// </summary>
    [DisplayName("DssOpenCV")]
    [Description("The DssOpenCV Service")]
    [Contract(Contract.Identifier)]
    public class DssOpenCVService : DsspServiceBase
    {


        CLROpenCV.MovingDetect _MovingDetect = null;

        //MovingDetect


        /// <summary>
        /// _state
        /// </summary>
        [ServiceState()]
        private DssOpenCVState _state = new DssOpenCVState();
        
        /// <summary>
        /// _main Port
        /// </summary>
        [ServicePort("/dssopencv", AllowMultipleInstances=false)]
        private DssOpenCVOperations _mainPort = new DssOpenCVOperations();
        
        /// <summary>
        /// Default Service Constructor
        /// </summary>
        public DssOpenCVService(DsspServiceCreationPort creationPort) : 
                base(creationPort)
        {
        }
        
        /// <summary>
        /// Service Start
        /// </summary>
        protected override void Start()
        {
			base.Start();
			// Add service specific initialization here.


            WinFormConstructor wc = new WinFormConstructor(
                delegate
                {
                    return new CLROpenCV.MovingDetect();
                }
                );

            _MovingDetect = (CLROpenCV.MovingDetect)wc.Invoke();

            WinFormsServicePort.FormInvoke(
                delegate() { _MovingDetect.Show();  }
            );

        }
    }
}
